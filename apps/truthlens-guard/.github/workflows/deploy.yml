name: Deploy to Vercel and Render

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build frontend
        run: npm run build

      - name: Deploy to Vercel
        run: |
          npm install -g vercel
          vercel --prod --yes
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VITE_API_URL: ${{ secrets.VITE_API_URL }}

  deploy-backend:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install backend dependencies
        run: |
          cd backend
          npm ci

      - name: Build backend
        run: |
          cd backend
          npm run build

      - name: Deploy to Render
        run: |
          npm install -g render-cli
          render deploy
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          NODE_ENV: production
          CORTENSOR_API_KEY: ${{ secrets.CORTENSOR_API_KEY }}
          CORTENSOR_SUBNET_UID: ${{ secrets.CORTENSOR_SUBNET_UID }}
          CORS_ORIGIN: ${{ secrets.CORS_ORIGIN }}
          RATE_LIMIT_WINDOW_MS: ${{ secrets.RATE_LIMIT_WINDOW_MS }}
          RATE_LIMIT_MAX_REQUESTS: ${{ secrets.RATE_LIMIT_MAX_REQUESTS }}
          LOG_LEVEL: ${{ secrets.LOG_LEVEL }}

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install backend dependencies
        run: |
          cd backend
          npm ci

      - name: Run frontend tests
        run: npm test -- --watchAll=false

      - name: Run backend tests
        run: |
          cd backend
          npm test

      - name: Run API tests
        run: node test-api.js
